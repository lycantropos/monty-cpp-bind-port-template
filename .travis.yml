dist: bionic

language: python

services:
  - docker

matrix:
  include:
{% for minor in range(min_python_version.split(".")[1]|int, (max_python_version.split(".")[1])|int + 1) %}    - python: 3.{{minor}}
{% endfor %}

env:
  global:
    - CPPFLAGS="-O0 --coverage"
    - TWINE_USERNAME=__token__

install:
  - python -m pip install --upgrade pip setuptools
  - python -m pip install --upgrade gcovr codecov
  - python -m pip install --force-reinstall -r requirements-setup.txt
  - python -m pip install --force-reinstall -r requirements.txt
  - python -m pip install --force-reinstall -r requirements-tests.txt
  - python setup.py develop

script:
  - python -m doctest README.md
  - pytest

after_success:
  - gcovr --filter src/ --filter include/ --xml -o coverage_cpp.xml -v
  - python -m codecov -f coverage.xml -X gcov
  - python -m codecov -f coverage_cpp.xml -X gcov

before_deploy:
  - rm -rf build
  - rm *.so
  - python setup.py sdist
  - python -m pip install --upgrade cibuildwheel
  - CIBW_BEFORE_BUILD='python -m pip install -r requirements-setup.txt' CIBW_BUILD=$(python
    -c 'import sys; print("cp" + "".join(map(str, sys.version_info[:2])) + "-*")') cibuildwheel
    --output-dir dist
  - python -m pip install --upgrade twine

deploy:
  on:
    tags: true
  provider: script
  script: twine upload --skip-existing dist/*
  skip_cleanup: true
